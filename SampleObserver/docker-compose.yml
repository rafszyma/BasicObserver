version: "3.4"
services:
  timeseries-api:
    container_name: timeseries-api
    build:
      context: .
      dockerfile: API/Dockerfile
    depends_on:
      - mongo
    ports:
      - '2601:80'
    networks: 
      - timeseries-network
    environment:
      - 'ASPNETCORE_ENVIRONMENT=Development'
      - 'Mongo:Url=101.101.101.1:27017'
      - 'Mongo:Login=root'
      - 'Mongo:Password=example'
      - 'CalculationServiceUrl=https://101.101.101.1:2602'
      
  timeseries-service:
    container_name: timeseries-service
    build:
      context: .
      dockerfile: Service/Dockerfile
    depends_on:
      - mongo
    ports:
      - '2602:443'
    networks: 
      - timeseries-network
    environment:
      - 'Mongo:Url=101.101.101.1:27017'
      - 'Mongo:Login=root'
      - 'Mongo:Password=example'
      - 'ASPNETCORE_URLS=https://+:443'
      - 'ASPNETCORE_Kestrel__Certificates__Default__Path=/app/Infrastructure/Certificate/devcert.pfx'
      - 'ASPNETCORE_Kestrel__Certificates__Default__Password=secret'
    volumes:
      - '.\cert\:/app/Infrastructure/Certificate'

## External
  mongo:
    container_name: timeseries-mongo
    image: mongo
    restart: always
    ports:
      - 27017:27017
    networks: 
      - timeseries-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    container_name: timeseries-mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
  
networks:
  timeseries-network:
    external: true